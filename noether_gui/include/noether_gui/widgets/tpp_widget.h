#pragma once

#include <noether_tpp/core/types.h>
#include <QWidget>

namespace boost_plugin_loader
{
class PluginLoader;
}

namespace Ui
{
class TPP;
}

namespace noether
{
/**
 * @brief Basic tool path planning widget
 * @details Allows the user to laod a mesh from file, configure a tool path planning pipeline, and generate tool paths
 * from the input mesh
 */
class TPPWidget : public QWidget
{
  Q_OBJECT
public:
  TPPWidget(boost_plugin_loader::PluginLoader loader, QWidget* parent = nullptr);

  /**
   * @brief Get the planned tool paths
   * @details The highest level vector represents the tool paths generated for each mesh "fragment" generated by the
   * mesh modifier in the tool path planning pipeline
   */
  std::vector<ToolPaths> getToolPaths();

private:
  void onLoadMesh(const bool /*checked*/);
  void onPlan(const bool /*checked*/);

  Ui::TPP* ui_;
  std::vector<ToolPaths> tool_paths_;
};

}  // namespace noether
